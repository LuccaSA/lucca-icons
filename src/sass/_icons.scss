@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// load icon font
// ===================================

@at-root {
	@font-face {
		font-family: "#{$luccaIcons_font-family}";
		src:  url("#{$luccaIcons_font-path}/#{$luccaIcons_font-name}.eot");
		src:  url("#{$luccaIcons_font-path}/#{$luccaIcons_font-name}.eot?#iefix") format("embedded-opentype"),
			  url("#{$luccaIcons_font-path}/#{$luccaIcons_font-name}.woff") format("woff"),
			  url("#{$luccaIcons_font-path}/#{$luccaIcons_font-name}.ttf") format("truetype"),
			  url("#{$luccaIcons_font-path}/#{$luccaIcons_font-name}.svg#lucca-icons") format("svg");
		font-weight: normal;
		font-style: normal;
	}
}


// Define icons
// ===================================

%luccaIcons_icon_base {
	font-family: "#{$luccaIcons_font-family}";
	font-style: normal;
	font-weight: normal;
	font-variant: normal;
	text-decoration: none;
	text-transform: none;
	text-align: center;
	font-size: $luccaIcons_font-size;

	speak: none;
	font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;

	&:before {
		display: block;
		margin-top: -1px;
	}
}

i#{$luccaIcons_icon-base-selector} {
	@extend %luccaIcons_icon_base;
	display: inline-block;
	vertical-align: middle;
}

// Icon styles
// ===================================

// Circular
i#{$luccaIcons_icon-base-selector}.circular {
	width: $luccaIcons_circular-width; height: $luccaIcons_circular-height;
	padding: $luccaIcons_circular-padding;

	border-radius: 50%;
}

// Flipped
i#{$luccaIcons_icon-base-selector}.flipped,
i#{$luccaIcons_icon-base-selector}.flipped[class*="horizontally flipped"] { transform: scale(-1, 1); }
i#{$luccaIcons_icon-base-selector}.flipped[class*="vertically flipped"] { transform: scale(1, -1); }

// Rotated
i#{$luccaIcons_icon-base-selector}.rotated,
i#{$luccaIcons_icon-base-selector}.rotated[class*="clockwise rotated"] { transform: rotate(90deg); }
i#{$luccaIcons_icon-base-selector}.rotated[class*="counterclockwise rotated"] { transform: rotate(-90deg); }


// Defines icon classes
@each $name, $char in $luccaIcons_icons {
	$class: str-replace($name, ' ', '.');
	i#{$luccaIcons_icon-base-selector}.#{$class}[class*="#{$name}"]:before { content: $char; }
}
